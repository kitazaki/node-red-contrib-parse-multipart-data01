[{"id":"d8905d995eb14aef","type":"subflow","name":"parse-multipart-data","info":"","category":"","in":[{"x":60,"y":80,"wires":[{"id":"8fc0ead8821f0406"}]}],"out":[{"x":340,"y":80,"wires":[{"id":"8fc0ead8821f0406","port":0}]}],"env":[],"meta":{"module":"node-red-contrib-parse-multipart-data01","type":"parse-multipart-data","version":"0.0.1","author":"Ayachika Kitazaki <kitazaki@gmail.com>","desc":"A node to parse multipart data using parse-multipart-data module","keywords":"node-red,parse-multipart-data","license":"Apache-2.0"},"color":"#DDAA99"},{"id":"8fc0ead8821f0406","type":"function","z":"d8905d995eb14aef","name":"function 1","func":"const body = msg.payload;\nconst lines = body.toString().split('\\r\\n');\nconst boundary = lines[0].slice(2);\nconst parts = parseMultipartData.parse(body, boundary);\n\n//msg.payload = parts;\nmsg.payload = parts[0].data;\n\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[{"var":"parseMultipartData","module":"parse-multipart-data"}],"x":200,"y":80,"wires":[[]]},{"id":"1787078b1a63b30f","type":"subflow:d8905d995eb14aef","z":"e459b0abf68836a4","name":"","x":380,"y":280,"wires":[["5517872cf2d90f7e","179a562833834d67"]]}]